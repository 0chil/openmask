{"remainingRequest":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-daum-map\\src\\VueDaumMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-daum-map\\src\\VueDaumMap.vue","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKLy8KLy8KLy8KLy8KaW1wb3J0IGxvYWRTY3JpcHRPbmNlIGZyb20gJ2xvYWQtc2NyaXB0LW9uY2UnOwp2YXIgTWFwVHlwZUlkID0gewogICJST0FETUFQIjogMSwKICAiTk9STUFMIjogMSwKICAiU0tZVklFVyI6IDIsCiAgIkhZQlJJRCI6IDMsCiAgIk9WRVJMQVkiOiA0LAogICJST0FEVklFVyI6IDUsCiAgIlRSQUZGSUMiOiA2LAogICJURVJSQUlOIjogNywKICAiQklDWUNMRSI6IDgsCiAgIkJJQ1lDTEVfSFlCUklEIjogOSwKICAiVVNFX0RJU1RSSUNUIjogMTAKfTsKdmFyIEVWRU5UUyA9IFsnY2VudGVyX2NoYW5nZWQnLCAnem9vbV9zdGFydCcsICd6b29tX2NoYW5nZWQnLCAnYm91bmRzX2NoYW5nZWQnLCAnY2xpY2snLCAnZGJsY2xpY2snLCAncmlnaHRjbGljaycsICdtb3VzZW1vdmUnLCAnZHJhZ3N0YXJ0JywgJ2RyYWcnLCAnZHJhZ2VuZCcsICdpZGxlJywgJ3RpbGVzbG9hZGVkJywgJ21hcHR5cGVpZF9jaGFuZ2VkJ107CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVnVlRGF1bU1hcCIsCiAgcHJvcHM6IHsKICAgIGFwcEtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgbGlicmFyaWVzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBjZW50ZXI6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGxldmVsOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgbWFwVHlwZUlkOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgZHJhZ2dhYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIHNjcm9sbHdoZWVsOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIGRpc2FibGVEb3VibGVDbGljazogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0sCiAgICBkaXNhYmxlRG91YmxlQ2xpY2tab29tOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIHByb2plY3Rpb25JZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIHRpbGVBbmltYXRpb246IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAga2V5Ym9hcmRTaG9ydGN1dHM6IHsKICAgICAgdHlwZTogW0Jvb2xlYW4sIE9iamVjdF0sCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1hcDogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGxvYWRTY3JpcHRPbmNlKCIvL2RhcGkua2FrYW8uY29tL3YyL21hcHMvc2RrLmpzP2F1dG9sb2FkPWZhbHNlJmFwcGtleT0iLmNvbmNhdCh0aGlzLmFwcEtleSwgIiZsaWJyYXJpZXM9IikuY29uY2F0KHRoaXMubGlicmFyaWVzLmpvaW4oJywnKSkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICBkYXVtLm1hcHMubG9hZChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMucmVuZGVyKCk7CgogICAgICAgIF90aGlzLmJpbmRFdmVudHMoKTsKCiAgICAgICAgX3RoaXMuJGVtaXQoJ2xvYWQnLCBfdGhpcy5tYXApOwogICAgICB9KTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgfSk7CiAgfSwKICB3YXRjaDogewogICAgbGV2ZWw6IGZ1bmN0aW9uIGxldmVsKCkgewogICAgICBpZiAoIXRoaXMubWFwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLm1hcC5zZXRMZXZlbCh0aGlzLmxldmVsKTsKICAgIH0sCiAgICBjZW50ZXI6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICBpZiAoIXRoaXMubWFwKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB0aGlzLm1hcC5zZXRDZW50ZXIobmV3IGRhdW0ubWFwcy5MYXRMbmcodGhpcy5jZW50ZXIubGF0LCB0aGlzLmNlbnRlci5sbmcpKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBvcHRpb25zID0gewogICAgICAgIC8v7KeA64+E66W8IOyDneyEse2VoCDrlYwg7ZWE7JqU7ZWcIOq4sOuzuCDsmLXshZgKICAgICAgICBjZW50ZXI6IG5ldyBkYXVtLm1hcHMuTGF0TG5nKHRoaXMuY2VudGVyLmxhdCwgdGhpcy5jZW50ZXIubG5nKSwKICAgICAgICAvL+yngOuPhOydmCDspJHsi6zsooztkZwuCiAgICAgICAgbGV2ZWw6IHRoaXMubGV2ZWwsCiAgICAgICAgLy/sp4Drj4TsnZgg66CI67KoKO2ZleuMgCwg7LaV7IaMIOygleuPhCkKICAgICAgICBtYXBUeXBlSWQ6IHRoaXMubWFwVHlwZUlkLAogICAgICAgIC8v7KeA64+EIO2DgOyehQogICAgICAgIGRyYWdnYWJsZTogdGhpcy5kcmFnZ2FibGUsCiAgICAgICAgc2Nyb2xsd2hlZWw6IHRoaXMuc2Nyb2xsd2hlZWwsCiAgICAgICAgZGlzYWJsZURvdWJsZUNsaWNrOiB0aGlzLmRpc2FibGVEb3VibGVDbGljaywKICAgICAgICBkaXNhYmxlRG91YmxlQ2xpY2tab29tOiB0aGlzLmRpc2FibGVEb3VibGVDbGlja1pvb20sCiAgICAgICAgcHJvamVjdGlvbklkOiB0aGlzLnByb2plY3Rpb25JZCwKICAgICAgICB0aWxlQW5pbWF0aW9uOiB0aGlzLnRpbGVBbmltYXRpb24sCiAgICAgICAga2V5Ym9hcmRTaG9ydGN1dHM6IHRoaXMua2V5Ym9hcmRTaG9ydGN1dHMKICAgICAgfTsKICAgICAgdGhpcy5tYXAgPSBuZXcgZGF1bS5tYXBzLk1hcCh0aGlzLiRlbCwgb3B0aW9ucyk7IC8v7KeA64+EIOyDneyEsSDrsI8g6rCd7LK0IOumrO2EtAogICAgfSwKICAgIGJpbmRFdmVudHM6IGZ1bmN0aW9uIGJpbmRFdmVudHMoKSB7CiAgICAgIHZhciBoYW5kbGVycyA9IHsKICAgICAgICBib3VuZHNfY2hhbmdlZDogdGhpcy5vbkNoYW5nZSwKICAgICAgICBpZGxlOiB0aGlzLm9uQ2hhbmdlCiAgICAgIH07CiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTsKICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7CiAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gRVZFTlRTW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgICAgdmFyIGV2ZW50ID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICB0aGlzLmJpbmRFdmVudChldmVudCwgaGFuZGxlcnNbZXZlbnRdKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTsKICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBiaW5kRXZlbnQ6IGZ1bmN0aW9uIGJpbmRFdmVudChldmVudCwgaGFuZGxlcikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGRhdW0ubWFwcy5ldmVudC5hZGRMaXN0ZW5lcih0aGlzLm1hcCwgZXZlbnQsIGZ1bmN0aW9uICgpIHsKICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgICAgfQoKICAgICAgICBfdGhpczIuJGVtaXQoZXZlbnQsIGFyZ3MpOwoKICAgICAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgIGhhbmRsZXIoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZSgpIHsKICAgICAgdmFyIGxldmVsID0gdGhpcy5tYXAuZ2V0TGV2ZWwoKTsKICAgICAgdmFyIGxhdGxuZyA9IHRoaXMubWFwLmdldENlbnRlcigpOwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6bGV2ZWwnLCBsZXZlbCk7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpjZW50ZXInLCB7CiAgICAgICAgbGF0OiBsYXRsbmcuZ2V0TGF0KCksCiAgICAgICAgbG5nOiBsYXRsbmcuZ2V0TG5nKCkKICAgICAgfSk7CiAgICB9CiAgfSwKICBNYXBUeXBlSWQ6IE1hcFR5cGVJZAp9Ow=="},{"version":3,"sources":["VueDaumMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\n  import loadScriptOnce from 'load-script-once';\n\n  const MapTypeId = {\n    \"ROADMAP\": 1,\n    \"NORMAL\": 1,\n    \"SKYVIEW\": 2,\n    \"HYBRID\": 3,\n    \"OVERLAY\": 4,\n    \"ROADVIEW\": 5,\n    \"TRAFFIC\": 6,\n    \"TERRAIN\": 7,\n    \"BICYCLE\": 8,\n    \"BICYCLE_HYBRID\": 9,\n    \"USE_DISTRICT\": 10\n  };\n\n  const EVENTS = [\n    'center_changed',\n    'zoom_start',\n    'zoom_changed',\n    'bounds_changed',\n    'click',\n    'dblclick',\n    'rightclick',\n    'mousemove',\n    'dragstart',\n    'drag',\n    'dragend',\n    'idle',\n    'tilesloaded',\n    'maptypeid_changed'\n  ];\n\n  export default {\n    name: \"VueDaumMap\",\n    props: {\n      appKey: {\n        type: String,\n        required: true\n      },\n      libraries: {\n        type: Array,\n        default: () => []\n      },\n      center: {\n        type: Object,\n        required: true\n      },\n      level: {\n        type: Number,\n        default: undefined\n      },\n      mapTypeId: {\n        type: Number,\n        default: undefined\n      },\n      draggable: {\n        type: Boolean,\n        default: undefined\n      },\n      scrollwheel: {\n        type: Boolean,\n        default: undefined\n      },\n      disableDoubleClick: {\n        type: Boolean,\n        default: undefined\n      },\n      disableDoubleClickZoom: {\n        type: Boolean,\n        default: undefined\n      },\n      projectionId: {\n        type: String,\n        default: undefined\n      },\n      tileAnimation: {\n        type: Boolean,\n        default: undefined\n      },\n      keyboardShortcuts: {\n        type: [Boolean, Object],\n        default: undefined\n      }\n    },\n    data: () => ({\n      map: null\n    }),\n    mounted () {\n      loadScriptOnce(`//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=${this.appKey}&libraries=${this.libraries.join(',')}`)\n        .then(() => {\n          daum.maps.load(() => {\n            this.render();\n            this.bindEvents();\n            this.$emit('load', this.map);\n          });\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    },\n    watch: {\n      level () {\n        if (!this.map) {\n          return;\n        }\n\n        this.map.setLevel(this.level);\n      },\n      center : {\n        handler () {\n          if (!this.map) {\n            return;\n          }\n\n          this.map.setCenter(new daum.maps.LatLng(this.center.lat, this.center.lng));\n        },\n        deep: true\n      }\n    },\n    methods: {\n      render () {\n        const options = { //지도를 생성할 때 필요한 기본 옵션\n          center: new daum.maps.LatLng(this.center.lat, this.center.lng), //지도의 중심좌표.\n          level: this.level, //지도의 레벨(확대, 축소 정도)\n          mapTypeId: this.mapTypeId, //지도 타입\n          draggable: this.draggable,\n          scrollwheel: this.scrollwheel,\n          disableDoubleClick: this.disableDoubleClick,\n          disableDoubleClickZoom: this.disableDoubleClickZoom,\n          projectionId: this.projectionId,\n          tileAnimation: this.tileAnimation,\n          keyboardShortcuts: this.keyboardShortcuts\n        };\n\n        this.map = new daum.maps.Map(this.$el, options); //지도 생성 및 객체 리턴\n      },\n      bindEvents () {\n        const handlers = {\n          bounds_changed: this.onChange,\n          idle: this.onChange\n        };\n\n        for (let event of EVENTS) {\n          this.bindEvent(event, handlers[event]);\n        }\n      },\n      bindEvent (event, handler) {\n        daum.maps.event.addListener(this.map, event, (...args) => {\n          this.$emit(event, args);\n\n          if (typeof handler === 'function') {\n            handler();\n          }\n        });\n      },\n      onChange () {\n        const level = this.map.getLevel();\n        const latlng = this.map.getCenter();\n\n        this.$emit('update:level', level);\n        this.$emit('update:center', {\n          lat: latlng.getLat(),\n          lng: latlng.getLng()\n        });\n      }\n    },\n    MapTypeId: MapTypeId\n  }\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"node_modules/vue-daum-map/src"}]}