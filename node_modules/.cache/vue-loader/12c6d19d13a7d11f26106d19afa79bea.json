{"remainingRequest":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-daum-map\\src\\VueDaumMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-daum-map\\src\\VueDaumMap.vue","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Park\\Desktop\\vuejs\\mask-finder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBsb2FkU2NyaXB0T25jZSBmcm9tICdsb2FkLXNjcmlwdC1vbmNlJzsKCmNvbnN0IE1hcFR5cGVJZCA9IHsKICAiUk9BRE1BUCI6IDEsCiAgIk5PUk1BTCI6IDEsCiAgIlNLWVZJRVciOiAyLAogICJIWUJSSUQiOiAzLAogICJPVkVSTEFZIjogNCwKICAiUk9BRFZJRVciOiA1LAogICJUUkFGRklDIjogNiwKICAiVEVSUkFJTiI6IDcsCiAgIkJJQ1lDTEUiOiA4LAogICJCSUNZQ0xFX0hZQlJJRCI6IDksCiAgIlVTRV9ESVNUUklDVCI6IDEwCn07Cgpjb25zdCBFVkVOVFMgPSBbCiAgJ2NlbnRlcl9jaGFuZ2VkJywKICAnem9vbV9zdGFydCcsCiAgJ3pvb21fY2hhbmdlZCcsCiAgJ2JvdW5kc19jaGFuZ2VkJywKICAnY2xpY2snLAogICdkYmxjbGljaycsCiAgJ3JpZ2h0Y2xpY2snLAogICdtb3VzZW1vdmUnLAogICdkcmFnc3RhcnQnLAogICdkcmFnJywKICAnZHJhZ2VuZCcsCiAgJ2lkbGUnLAogICd0aWxlc2xvYWRlZCcsCiAgJ21hcHR5cGVpZF9jaGFuZ2VkJwpdOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJWdWVEYXVtTWFwIiwKICBwcm9wczogewogICAgYXBwS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBsaWJyYXJpZXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgY2VudGVyOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBsZXZlbDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIG1hcFR5cGVJZDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIGRyYWdnYWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0sCiAgICBzY3JvbGx3aGVlbDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0sCiAgICBkaXNhYmxlRG91YmxlQ2xpY2s6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgZGlzYWJsZURvdWJsZUNsaWNrWm9vbTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0sCiAgICBwcm9qZWN0aW9uSWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0sCiAgICB0aWxlQW5pbWF0aW9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIGtleWJvYXJkU2hvcnRjdXRzOiB7CiAgICAgIHR5cGU6IFtCb29sZWFuLCBPYmplY3RdLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0KICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBtYXA6IG51bGwKICB9KSwKICBtb3VudGVkICgpIHsKICAgIGxvYWRTY3JpcHRPbmNlKGAvL2RhcGkua2FrYW8uY29tL3YyL21hcHMvc2RrLmpzP2F1dG9sb2FkPWZhbHNlJmFwcGtleT0ke3RoaXMuYXBwS2V5fSZsaWJyYXJpZXM9JHt0aGlzLmxpYnJhcmllcy5qb2luKCcsJyl9YCkKICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgIGRhdW0ubWFwcy5sb2FkKCgpID0+IHsKICAgICAgICAgIHRoaXMucmVuZGVyKCk7CiAgICAgICAgICB0aGlzLmJpbmRFdmVudHMoKTsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2xvYWQnLCB0aGlzLm1hcCk7CiAgICAgICAgfSk7CiAgICAgIH0pCiAgICAgIC5jYXRjaChlcnIgPT4gewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfSk7CiAgfSwKICB3YXRjaDogewogICAgbGV2ZWwgKCkgewogICAgICBpZiAoIXRoaXMubWFwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLm1hcC5zZXRMZXZlbCh0aGlzLmxldmVsKTsKICAgIH0sCiAgICBjZW50ZXIgOiB7CiAgICAgIGhhbmRsZXIgKCkgewogICAgICAgIGlmICghdGhpcy5tYXApIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMubWFwLnNldENlbnRlcihuZXcgZGF1bS5tYXBzLkxhdExuZyh0aGlzLmNlbnRlci5sYXQsIHRoaXMuY2VudGVyLmxuZykpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZW5kZXIgKCkgewogICAgICBjb25zdCBvcHRpb25zID0geyAvL+yngOuPhOulvCDsg53shLHtlaAg65WMIO2VhOyalO2VnCDquLDrs7gg7Ji17IWYCiAgICAgICAgY2VudGVyOiBuZXcgZGF1bS5tYXBzLkxhdExuZyh0aGlzLmNlbnRlci5sYXQsIHRoaXMuY2VudGVyLmxuZyksIC8v7KeA64+E7J2YIOykkeyLrOyijO2RnC4KICAgICAgICBsZXZlbDogdGhpcy5sZXZlbCwgLy/sp4Drj4TsnZgg66CI67KoKO2ZleuMgCwg7LaV7IaMIOygleuPhCkKICAgICAgICBtYXBUeXBlSWQ6IHRoaXMubWFwVHlwZUlkLCAvL+yngOuPhCDtg4DsnoUKICAgICAgICBkcmFnZ2FibGU6IHRoaXMuZHJhZ2dhYmxlLAogICAgICAgIHNjcm9sbHdoZWVsOiB0aGlzLnNjcm9sbHdoZWVsLAogICAgICAgIGRpc2FibGVEb3VibGVDbGljazogdGhpcy5kaXNhYmxlRG91YmxlQ2xpY2ssCiAgICAgICAgZGlzYWJsZURvdWJsZUNsaWNrWm9vbTogdGhpcy5kaXNhYmxlRG91YmxlQ2xpY2tab29tLAogICAgICAgIHByb2plY3Rpb25JZDogdGhpcy5wcm9qZWN0aW9uSWQsCiAgICAgICAgdGlsZUFuaW1hdGlvbjogdGhpcy50aWxlQW5pbWF0aW9uLAogICAgICAgIGtleWJvYXJkU2hvcnRjdXRzOiB0aGlzLmtleWJvYXJkU2hvcnRjdXRzCiAgICAgIH07CgogICAgICB0aGlzLm1hcCA9IG5ldyBkYXVtLm1hcHMuTWFwKHRoaXMuJGVsLCBvcHRpb25zKTsgLy/sp4Drj4Qg7IOd7ISxIOuwjyDqsJ3ssrQg66as7YS0CiAgICB9LAogICAgYmluZEV2ZW50cyAoKSB7CiAgICAgIGNvbnN0IGhhbmRsZXJzID0gewogICAgICAgIGJvdW5kc19jaGFuZ2VkOiB0aGlzLm9uQ2hhbmdlLAogICAgICAgIGlkbGU6IHRoaXMub25DaGFuZ2UKICAgICAgfTsKCiAgICAgIGZvciAobGV0IGV2ZW50IG9mIEVWRU5UUykgewogICAgICAgIHRoaXMuYmluZEV2ZW50KGV2ZW50LCBoYW5kbGVyc1tldmVudF0pOwogICAgICB9CiAgICB9LAogICAgYmluZEV2ZW50IChldmVudCwgaGFuZGxlcikgewogICAgICBkYXVtLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIodGhpcy5tYXAsIGV2ZW50LCAoLi4uYXJncykgPT4gewogICAgICAgIHRoaXMuJGVtaXQoZXZlbnQsIGFyZ3MpOwoKICAgICAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgIGhhbmRsZXIoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG9uQ2hhbmdlICgpIHsKICAgICAgY29uc3QgbGV2ZWwgPSB0aGlzLm1hcC5nZXRMZXZlbCgpOwogICAgICBjb25zdCBsYXRsbmcgPSB0aGlzLm1hcC5nZXRDZW50ZXIoKTsKCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpsZXZlbCcsIGxldmVsKTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmNlbnRlcicsIHsKICAgICAgICBsYXQ6IGxhdGxuZy5nZXRMYXQoKSwKICAgICAgICBsbmc6IGxhdGxuZy5nZXRMbmcoKQogICAgICB9KTsKICAgIH0KICB9LAogIE1hcFR5cGVJZDogTWFwVHlwZUlkCn0K"},{"version":3,"sources":["VueDaumMap.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueDaumMap.vue","sourceRoot":"node_modules/vue-daum-map/src","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\n  import loadScriptOnce from 'load-script-once';\n\n  const MapTypeId = {\n    \"ROADMAP\": 1,\n    \"NORMAL\": 1,\n    \"SKYVIEW\": 2,\n    \"HYBRID\": 3,\n    \"OVERLAY\": 4,\n    \"ROADVIEW\": 5,\n    \"TRAFFIC\": 6,\n    \"TERRAIN\": 7,\n    \"BICYCLE\": 8,\n    \"BICYCLE_HYBRID\": 9,\n    \"USE_DISTRICT\": 10\n  };\n\n  const EVENTS = [\n    'center_changed',\n    'zoom_start',\n    'zoom_changed',\n    'bounds_changed',\n    'click',\n    'dblclick',\n    'rightclick',\n    'mousemove',\n    'dragstart',\n    'drag',\n    'dragend',\n    'idle',\n    'tilesloaded',\n    'maptypeid_changed'\n  ];\n\n  export default {\n    name: \"VueDaumMap\",\n    props: {\n      appKey: {\n        type: String,\n        required: true\n      },\n      libraries: {\n        type: Array,\n        default: () => []\n      },\n      center: {\n        type: Object,\n        required: true\n      },\n      level: {\n        type: Number,\n        default: undefined\n      },\n      mapTypeId: {\n        type: Number,\n        default: undefined\n      },\n      draggable: {\n        type: Boolean,\n        default: undefined\n      },\n      scrollwheel: {\n        type: Boolean,\n        default: undefined\n      },\n      disableDoubleClick: {\n        type: Boolean,\n        default: undefined\n      },\n      disableDoubleClickZoom: {\n        type: Boolean,\n        default: undefined\n      },\n      projectionId: {\n        type: String,\n        default: undefined\n      },\n      tileAnimation: {\n        type: Boolean,\n        default: undefined\n      },\n      keyboardShortcuts: {\n        type: [Boolean, Object],\n        default: undefined\n      }\n    },\n    data: () => ({\n      map: null\n    }),\n    mounted () {\n      loadScriptOnce(`//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=${this.appKey}&libraries=${this.libraries.join(',')}`)\n        .then(() => {\n          daum.maps.load(() => {\n            this.render();\n            this.bindEvents();\n            this.$emit('load', this.map);\n          });\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    },\n    watch: {\n      level () {\n        if (!this.map) {\n          return;\n        }\n\n        this.map.setLevel(this.level);\n      },\n      center : {\n        handler () {\n          if (!this.map) {\n            return;\n          }\n\n          this.map.setCenter(new daum.maps.LatLng(this.center.lat, this.center.lng));\n        },\n        deep: true\n      }\n    },\n    methods: {\n      render () {\n        const options = { //지도를 생성할 때 필요한 기본 옵션\n          center: new daum.maps.LatLng(this.center.lat, this.center.lng), //지도의 중심좌표.\n          level: this.level, //지도의 레벨(확대, 축소 정도)\n          mapTypeId: this.mapTypeId, //지도 타입\n          draggable: this.draggable,\n          scrollwheel: this.scrollwheel,\n          disableDoubleClick: this.disableDoubleClick,\n          disableDoubleClickZoom: this.disableDoubleClickZoom,\n          projectionId: this.projectionId,\n          tileAnimation: this.tileAnimation,\n          keyboardShortcuts: this.keyboardShortcuts\n        };\n\n        this.map = new daum.maps.Map(this.$el, options); //지도 생성 및 객체 리턴\n      },\n      bindEvents () {\n        const handlers = {\n          bounds_changed: this.onChange,\n          idle: this.onChange\n        };\n\n        for (let event of EVENTS) {\n          this.bindEvent(event, handlers[event]);\n        }\n      },\n      bindEvent (event, handler) {\n        daum.maps.event.addListener(this.map, event, (...args) => {\n          this.$emit(event, args);\n\n          if (typeof handler === 'function') {\n            handler();\n          }\n        });\n      },\n      onChange () {\n        const level = this.map.getLevel();\n        const latlng = this.map.getCenter();\n\n        this.$emit('update:level', level);\n        this.$emit('update:center', {\n          lat: latlng.getLat(),\n          lng: latlng.getLng()\n        });\n      }\n    },\n    MapTypeId: MapTypeId\n  }\n</script>\n\n<style scoped>\n</style>"]}]}